// Intersection of two sorted Linked lists
// Given two linked lists sorted in increasing order, create a new linked list representing the intersection of the two linked lists. The new linked list should be made with its own memory the original lists should not be changed.


Node* intersection(Node* l1, Node* l2){
    if(l1 == NULL || l2 == NULL) return NULL;
    Node* n1 = l1;
    Node* n2 = l2;
    Node* res = new Node(-1);
    Node* curr = res;
    while(n1 != NULL && n2 != NULL){
        if(n1->data < n2->data){
            n1 = n1->next;
        }
        else if(n1->data > n2->data){
            n2 = n2->next;
        }
        else{
            curr->next = n1;
            curr = curr->next;
            n1 = n1->next;
            n2 = n2->next;
        }
    }
    curr->next = NULL;
    return res->next;
}

// Time Complexity : O(n)
// Space Complexity : O(1)

